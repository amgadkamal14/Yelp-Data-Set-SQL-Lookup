Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

Code: SELECT COUNT(*) from table_name
	
i. Attribute table = 10000 records
ii. Business table = 10000 records
iii. Category table = 10000 records
iv. Checkin table = 10000 records
v. elite_years table = 10000 records
vi. friend table = 10000 records
vii. hours table = 10000 records
viii. photo table = 10000 records
ix. review table = 10000 records
x. tip table = 10000 records
xi. user table = 10000 records
	

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

Code: SELECT COUNT(DISTINCT (Key_table_name)) from table_name

i. Business = 10000
ii. Hours = 1562 
iii. Category = 2643
iv. Attribute = 1115 
v. Review = 10000
vi. Checkin = 493 
vii. Photo = 10000
viii. Tip = 3979 for businees_id (foreign key), 537 for user_id (foreign key)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780 

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
SELECT COUNT(*) 
    from User
		where id is NULL OR
			  name is NULL OR
			  review_count IS NULL OR
			  yelping_since IS NULL OR
			  useful IS NULL OR 
			  funny IS NULL OR 
			  cool IS NULL OR 
			  fans IS NULL OR 
			  average_stars IS NULL OR 
			  compliment_hot IS NULL OR 
			  compliment_more IS NULL OR 
			  compliment_profile IS NULL OR 
			  compliment_cute IS NULL OR 
			  compliment_list IS NULL OR 
			  compliment_note IS NULL OR 
			  compliment_plain IS NULL OR 
			  compliment_cool IS NULL OR 
			  compliment_funny IS NULL OR 
			  compliment_writer IS NULL OR 
			  compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

Code: SELECT min(col_name), max(col_name), avg(col_name) from table_name

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

	select city, sum(review_count) as reviews
      	from business
	group by 1
	order by 2 desc
	
	Copy and Paste the Result Below:
	
	+-----------------+---------+
	| city            | reviews |
	+-----------------+---------+
	| Las Vegas       |   82854 |
	| Phoenix         |   34503 |
	| Toronto         |   24113 |
	| Scottsdale      |   20614 |
	| Charlotte       |   12523 |
	| Henderson       |   10871 |
	| Tempe           |   10504 |
	| Pittsburgh      |    9798 |
	| Montréal        |    9448 |
	| Chandler        |    8112 |
	| Mesa            |    6875 |
	| Gilbert         |    6380 |
	| Cleveland       |    5593 |
	| Madison         |    5265 |
	| Glendale        |    4406 |
	| Mississauga     |    3814 |
	| Edinburgh       |    2792 |
	| Peoria          |    2624 |
	| North Las Vegas |    2438 |
	| Markham         |    2352 |
	| Champaign       |    2029 |
	| Stuttgart       |    1849 |
	| Surprise        |    1520 |
	| Lakewood        |    1465 |
	| Goodyear        |    1155 |
	+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

select stars, count(review_count) as num_of_reviews
from business
where city = "Avon"
group by 1
order by 1

Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+----------------+
| stars | num_of_reviews |
+-------+----------------+
|   1.5 |              1 |
|   2.5 |              2 |
|   3.5 |              3 |
|   4.0 |              2 |
|   4.5 |              1 |
|   5.0 |              1 |
+-------+----------------+

ii. Beachwood

SQL code used to arrive at answer:

select stars, count(review_count) as num_of_reviews
from business
where city = "Beachwood"
group by 1
order by 1

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
+-------+----------------+
| stars | num_of_reviews |
+-------+----------------+
|   2.0 |              1 |
|   2.5 |              1 |
|   3.0 |              2 |
|   3.5 |              2 |
|   4.0 |              1 |
|   4.5 |              2 |
|   5.0 |              5 |
+-------+----------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
select name, sum(review_count) as num_of_reviews
from user
group by 1
order by 2 desc
limit 3;
	
	Copy and Paste the Result Below:
		
+--------+----------------+
| name   | num_of_reviews |
+--------+----------------+
| Nicole |           2397 |
| Sara   |           2253 |
| Gerald |           2034 |
+--------+----------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
No 	
due to the query from above question and below we will find that the top 3 reviews no one in top 3 fans

Code:
select name, sum(review_count) as num_of_reviews, sum(fans)
from user
group by 1
order by 2 desc
limit 3;
	
+--------+----------------+-----------+
| name   | num_of_reviews | sum(fans) |
+--------+----------------+-----------+
| Amy    |           1158 |       519 |
| Mimi   |           1010 |       498 |
| Harald |           1161 |       311 |
+--------+----------------+-----------+

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Yes

	
	SQL code used to arrive at answer:

select count(*) as text_count                           	
from review                                 	
where text like "%love%" 
union
select count(*)						
from review						
where text like "%hate%"

+------------+
| text_count |
+------------+
|        232 |
|       1780 |
+------------+


10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
select name, sum(fans)
from user
group by 1
order by 2 desc
limit 10;	
	
	Copy and Paste the Result Below:

+-----------+-----------+
| name      | sum(fans) |
+-----------+-----------+
| Amy       |       519 |
| Mimi      |       498 |
| Harald    |       311 |
| Gerald    |       256 |
| Lisa      |       207 |
| Nicole    |       200 |
| Christine |       187 |
| Mark      |       156 |
| Jen       |       148 |
| Linda     |       148 |
+-----------+-----------+	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
In this analysis I choose "Las Vegas" and "Restaurants"

i. Do the two groups you chose to analyze have a different distribution of hours?

Yes, they have different distribution 

ii. Do the two groups you chose to analyze have a different number of reviews?
         
Yes they have different number of reviews
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

No, I wasn't able to infer anything since two groups had different zipcodes

SQL code used for analysis:
SELECT b.city,c.category,b.name,h.hours,b.postal_code, 
	CASE
	 WHEN stars BETWEEN 2 AND 3 THEN '2-3 stars'
         WHEN stars BETWEEN 4 AND 5 THEN '4-5 stars'
         END AS rating,
       sum(b.review_count) as reviews
From business b
join hours h  on b.id = h.business_id
join category c on c.business_id = b.id
Where city = 'Las Vegas' and category = 'Restaurants' 
group by name
Order By stars desc		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         the average stars for the group of still open is higher than the closed group
		and the average review count is the same
         
ii. Difference 2:
         
         the business that still open is represent about 84.8% and the business that closed is about 15.2%
	 
         
SQL code used for analysis:

select count(distinct id), avg(stars), avg(review_count), is_open
From business
group by 4
order by 3 
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

    I choose to analysis the relations between no.of reviews, useful and average stars      
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
   We take user table to make this analysis and make some aggregation to answer the question.

   The code belew we compare between the top 10 in most user reviews
               
iii. Output of your finished dataset:
         
      we find that average stars for the top 10 user that have the most reviews is between 3 to 4.5 stars
	and will find that must of them is useful reviews    

iv. Provide the SQL code you used to create your final dataset:

select id, sum(review_count), sum(useful), average_stars
from user
group by 1
order by 2 desc,3 desc,4 desc
limit 10;